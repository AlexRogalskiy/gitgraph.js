{"version":3,"file":"main.42a99595f098097795dd.bundle.js","sources":["webpack:///./src/helpers.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { createRef, useLayoutEffect } from \"react\";\nexport { GraphContainer, createFixedHashGenerator, createSvg, createG, createText, createPath, createForeignObject, };\nfunction createFixedHashGenerator() {\n    var hashIndex = 0;\n    return function () { return \"h45h\" + hashIndex++; };\n}\n/**\n * A React container to wrap HTMLElement so we can render @gitgraph/js\n * stories with @storybook/react.\n * We need to because Chromatic QA only handle 1 Storybook / repo.\n * And Storybook doesn't run multiple frameworks in 1 Storybook (yet).\n * See https://github.com/storybooks/storybook/issues/3994\n */\nfunction GraphContainer(props) {\n    var graphContainer = createRef();\n    useLayoutEffect(function () {\n        if (graphContainer.current) {\n            props.children(graphContainer.current);\n        }\n    });\n    return React.createElement(\"div\", { ref: graphContainer });\n}\nvar SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createSvg(options) {\n    var svg = document.createElementNS(SVG_NAMESPACE, \"svg\");\n    if (!options)\n        return svg;\n    if (options.children) {\n        options.children.forEach(function (child) { return svg.appendChild(child); });\n    }\n    if (options.viewBox) {\n        svg.setAttribute(\"viewBox\", options.viewBox);\n    }\n    if (options.height) {\n        svg.setAttribute(\"height\", options.height.toString());\n    }\n    if (options.width) {\n        svg.setAttribute(\"width\", options.width.toString());\n    }\n    return svg;\n}\nfunction createG(options) {\n    var g = document.createElementNS(SVG_NAMESPACE, \"g\");\n    options.children.forEach(function (child) { return child && g.appendChild(child); });\n    if (options.translate) {\n        g.setAttribute(\"transform\", \"translate(\" + options.translate.x + \", \" + options.translate.y + \")\");\n    }\n    if (options.fill) {\n        g.setAttribute(\"fill\", options.fill);\n    }\n    if (options.stroke) {\n        g.setAttribute(\"stroke\", options.stroke);\n    }\n    if (options.strokeWidth) {\n        g.setAttribute(\"stroke-width\", options.strokeWidth.toString());\n    }\n    if (options.onClick) {\n        g.addEventListener(\"click\", options.onClick);\n    }\n    if (options.onMouseOver) {\n        g.addEventListener(\"mouseover\", options.onMouseOver);\n    }\n    if (options.onMouseOut) {\n        g.addEventListener(\"mouseout\", options.onMouseOut);\n    }\n    return g;\n}\nfunction createText(options) {\n    var text = document.createElementNS(SVG_NAMESPACE, \"text\");\n    text.setAttribute(\"alignment-baseline\", \"central\");\n    text.setAttribute(\"dominant-baseline\", \"central\");\n    text.textContent = options.content;\n    if (options.fill) {\n        text.setAttribute(\"fill\", options.fill);\n    }\n    if (options.font) {\n        text.setAttribute(\"style\", \"font: \" + options.font);\n    }\n    if (options.anchor) {\n        text.setAttribute(\"text-anchor\", options.anchor);\n    }\n    if (options.translate) {\n        text.setAttribute(\"x\", options.translate.x.toString());\n        text.setAttribute(\"y\", options.translate.y.toString());\n    }\n    if (options.onClick) {\n        text.addEventListener(\"click\", options.onClick);\n    }\n    return text;\n}\nfunction createPath(options) {\n    var path = document.createElementNS(SVG_NAMESPACE, \"path\");\n    path.setAttribute(\"d\", options.d);\n    if (options.fill) {\n        path.setAttribute(\"fill\", options.fill);\n    }\n    if (options.stroke) {\n        path.setAttribute(\"stroke\", options.stroke);\n    }\n    if (options.strokeWidth) {\n        path.setAttribute(\"stroke-width\", options.strokeWidth.toString());\n    }\n    if (options.translate) {\n        path.setAttribute(\"transform\", \"translate(\" + options.translate.x + \", \" + options.translate.y + \")\");\n    }\n    return path;\n}\nfunction createForeignObject(options) {\n    var result = document.createElementNS(SVG_NAMESPACE, \"foreignObject\");\n    result.setAttribute(\"width\", options.width.toString());\n    if (options.translate) {\n        result.setAttribute(\"x\", options.translate.x.toString());\n        result.setAttribute(\"y\", options.translate.y.toString());\n    }\n    var p = document.createElement(\"p\");\n    p.textContent = options.content;\n    result.appendChild(p);\n    return result;\n}\n"],"mappings":"AAAA","sourceRoot":""}